INFO  16:41:27,830 - Compiling source file: C:\Users\xxx\Desktop\CETVRTA-GODINA\7.SEMESTAR\PP1\PROJEKAT_PP\workspace\MJCompiler\test\program.mj
INFO  16:41:27,877 - #13 program
INFO  16:41:27,877 - #41 test302
INFO  16:41:27,877 - #41 bool
INFO  16:41:27,879 - #41 niz
INFO  16:41:27,880 - #33 [
INFO  16:41:27,880 - #34 ]
INFO  16:41:27,880 - #38 ;
INFO  16:41:27,881 - #41 int
INFO  16:41:27,882 - #41 niz2
INFO  16:41:27,882 - #33 [
INFO  16:41:27,882 - #34 ]
INFO  16:41:27,882 - #38 ;
INFO  16:41:27,882 - #41 bool
INFO  16:41:27,882 - #41 curr
INFO  16:41:27,883 - #38 ;
INFO  16:41:27,883 - #36 {
INFO  16:41:27,883 - #41 int
INFO  16:41:27,883 - #41 f
INFO  16:41:27,884 - #31 (
INFO  16:41:27,884 - #32 )
INFO  16:41:27,885 - #36 {
INFO  16:41:27,885 - #9 return
INFO  16:41:27,886 - #43 2
INFO  16:41:27,886 - #38 ;
INFO  16:41:27,887 - #37 }
INFO  16:41:27,888 - #10 void
INFO  16:41:27,889 - #41 main
INFO  16:41:27,889 - #31 (
INFO  16:41:27,889 - #32 )
INFO  16:41:27,889 - #41 int
INFO  16:41:27,890 - #41 a
INFO  16:41:27,890 - #38 ;
INFO  16:41:27,890 - #41 int
INFO  16:41:27,890 - #41 i
INFO  16:41:27,890 - #38 ;
INFO  16:41:27,890 - #41 int
INFO  16:41:27,890 - #41 j
INFO  16:41:27,890 - #38 ;
INFO  16:41:27,890 - #41 int
INFO  16:41:27,890 - #41 curr2
INFO  16:41:27,890 - #38 ;
INFO  16:41:27,890 - #36 {
INFO  16:41:27,890 - #41 a
INFO  16:41:27,891 - #39 =
INFO  16:41:27,892 - #43 0
INFO  16:41:27,893 - #38 ;
INFO  16:41:27,893 - #41 niz
INFO  16:41:27,893 - #39 =
INFO  16:41:27,893 - #6 new
INFO  16:41:27,893 - #41 bool
INFO  16:41:27,893 - #33 [
INFO  16:41:27,893 - #43 4
INFO  16:41:27,893 - #34 ]
INFO  16:41:27,893 - #38 ;
INFO  16:41:27,893 - #41 niz
INFO  16:41:27,894 - #33 [
INFO  16:41:27,894 - #43 0
INFO  16:41:27,894 - #34 ]
INFO  16:41:27,894 - #39 =
INFO  16:41:27,894 - #42 1
INFO  16:41:27,894 - #38 ;
INFO  16:41:27,894 - #41 niz
INFO  16:41:27,894 - #33 [
INFO  16:41:27,894 - #43 1
INFO  16:41:27,894 - #34 ]
INFO  16:41:27,894 - #39 =
INFO  16:41:27,894 - #42 0
INFO  16:41:27,895 - #38 ;
INFO  16:41:27,895 - #41 niz
INFO  16:41:27,895 - #33 [
INFO  16:41:27,895 - #43 2
INFO  16:41:27,895 - #34 ]
INFO  16:41:27,895 - #39 =
INFO  16:41:27,895 - #42 1
INFO  16:41:27,895 - #38 ;
INFO  16:41:27,895 - #41 niz
INFO  16:41:27,895 - #33 [
INFO  16:41:27,895 - #43 3
INFO  16:41:27,895 - #34 ]
INFO  16:41:27,895 - #39 =
INFO  16:41:27,896 - #42 1
INFO  16:41:27,896 - #38 ;
INFO  16:41:27,896 - #41 niz
INFO  16:41:27,896 - #30 .
INFO  16:41:27,897 - #12 foreach
INFO  16:41:27,897 - #31 (
INFO  16:41:27,898 - #41 curr
INFO  16:41:27,898 - #35 =>
INFO  16:41:27,898 - #36 {
INFO  16:41:27,898 - #41 i
INFO  16:41:27,898 - #39 =
INFO  16:41:27,898 - #43 0
INFO  16:41:27,898 - #38 ;
INFO  16:41:27,899 - #5 while
INFO  16:41:27,899 - #31 (
INFO  16:41:27,899 - #41 curr
INFO  16:41:27,900 - #32 )
INFO  16:41:27,901 - #36 {
INFO  16:41:27,901 - #7 print
INFO  16:41:27,901 - #31 (
INFO  16:41:27,901 - #41 i
INFO  16:41:27,901 - #32 )
INFO  16:41:27,901 - #38 ;
INFO  16:41:27,901 - #41 i
INFO  16:41:27,901 - #28 ++
INFO  16:41:27,902 - #38 ;
INFO  16:41:27,902 - #4 if
INFO  16:41:27,902 - #31 (
INFO  16:41:27,902 - #41 i
INFO  16:41:27,902 - #20 ==
INFO  16:41:27,902 - #43 3
INFO  16:41:27,902 - #32 )
INFO  16:41:27,903 - #2 break
INFO  16:41:27,903 - #38 ;
INFO  16:41:27,903 - #37 }
INFO  16:41:27,905 - #7 print
INFO  16:41:27,906 - #31 (
INFO  16:41:27,906 - #41 eol
INFO  16:41:27,906 - #32 )
INFO  16:41:27,906 - #38 ;
INFO  16:41:27,906 - #37 }
INFO  16:41:27,906 - #32 )
INFO  16:41:27,907 - #38 ;
INFO  16:41:27,907 - #7 print
INFO  16:41:27,907 - #31 (
INFO  16:41:27,907 - #41 eol
INFO  16:41:27,907 - #32 )
INFO  16:41:27,907 - #38 ;
INFO  16:41:27,907 - #7 print
INFO  16:41:27,907 - #31 (
INFO  16:41:27,908 - #44 k
INFO  16:41:27,908 - #32 )
INFO  16:41:27,910 - #38 ;
INFO  16:41:27,910 - #7 print
INFO  16:41:27,910 - #31 (
INFO  16:41:27,910 - #44 r
INFO  16:41:27,910 - #32 )
INFO  16:41:27,910 - #38 ;
INFO  16:41:27,910 - #7 print
INFO  16:41:27,910 - #31 (
INFO  16:41:27,910 - #44 a
INFO  16:41:27,910 - #32 )
INFO  16:41:27,910 - #38 ;
INFO  16:41:27,910 - #7 print
INFO  16:41:27,910 - #31 (
INFO  16:41:27,910 - #44 j
INFO  16:41:27,910 - #32 )
INFO  16:41:27,910 - #38 ;
INFO  16:41:27,910 - #7 print
INFO  16:41:27,910 - #31 (
INFO  16:41:27,910 - #41 eol
INFO  16:41:27,910 - #32 )
INFO  16:41:27,911 - #38 ;
INFO  16:41:27,911 - #41 i
INFO  16:41:27,911 - #39 =
INFO  16:41:27,911 - #41 f
INFO  16:41:27,911 - #31 (
INFO  16:41:27,911 - #32 )
INFO  16:41:27,912 - #38 ;
INFO  16:41:27,912 - #7 print
INFO  16:41:27,912 - #31 (
INFO  16:41:27,912 - #41 i
INFO  16:41:27,912 - #32 )
INFO  16:41:27,912 - #37 }
ERROR 16:41:27,912 - 
Sintaksna greska na liniji 45
INFO  16:41:27,912 - #37 }
ERROR 16:41:27,913 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 48
